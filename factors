#!/usr/bin/python3

# Factorize as many numbers as possible into a product of two smaller numbers.

# Usage: factors <file>
# where <file> is a file containing natural numbers to factor.
# One number per line
# You can assume that all lines will be valid natural numbers greater than 1
# You can assume that there will be no empy line, and no space before and after the valid number
# The file will always end with a new line
# Output format: n=p*q
# one factorization per line
# p and q don’t have to be prime numbers
# See example
# You can work on the numbers of the file in the order of your choice
# Your program should run without any dependency: You will not be able to install anything on the machine we will run your program on
# Time limit: Your program will be killed after 5 seconds if it hasn’t finish
# Push all your scripts, source code, etc… to your repository
# we will only run your executable factors

from sys import argv
from math import sqrt


def factor():
    with open(argv[1]) as f:
        for line in f:
            num = int(line)
            print("{:d}=".format(num), end="")
            if num % 2 == 0:
                print("{}*2".format(num // 2))
                continue
            sqn = int(sqrt(num))
            if sqn % 2 == 0:
                sqn += 1
            for i in range(3, sqn + 1, 2):
                if num % i == 0:
                    print("{}*{}".format(i, num // i))
                    break
            if num % i != 0:
                print("{}={}*1".format(num, num))


if __name__ == "__main__":
    if len(argv) != 2:
        print("Usage: ./factors FILE")
        exit(1)

    factor()
